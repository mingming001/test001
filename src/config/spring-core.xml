<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"  
xmlns:context="http://www.springframework.org/schema/context" 
xmlns:p="http://www.springframework.org/schema/p"  
xmlns:mvc="http://www.springframework.org/schema/mvc" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:tx="http://www.springframework.org/schema/tx"
xsi:schemaLocation="http://www.springframework.org/schema/beans    
					http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
					http://www.springframework.org/schema/context    
					http://www.springframework.org/schema/context/spring-context.xsd 
					http://www.springframework.org/schema/tx
					http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
					http://www.springframework.org/schema/aop
					http://www.springframework.org/schema/aop/spring-aop-4.0.xsd   
					http://www.springframework.org/schema/mvc    
					http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd" >
	
	<context:property-placeholder location="classpath:config/database.properties" />
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${mysql.driverClass}" />
		<property name="jdbcUrl" value="${mysql.url}" />
		<property name="user" value="${mysql.user}" />
		<property name="password" value="${mysql.password}" />
		<property name="acquireIncrement" value="5" />
		<!-- 当连接池中的连接用完时，C3P0一次性创建新连接的数目2-->
		<property name="initialPoolSize" value="10" />
		<!-- 初始化时创建的连接数，必须在minPoolSize和maxPoolSize之间-->
		<property name="minPoolSize" value="5" />
		<property name="maxPoolSize" value="20" />
		<!-- 最大空闲时间，超过空闲时间的连接将被丢弃 [需要注意：mysql默认的连接时长为8小时(28800）【可在my.ini中添加 wait_timeout=30(单位秒)设置连接超时】,这里设置c3p0的超时必须<28800]-->
		<property name="maxIdleTime" value="300" />
		<property name="idleConnectionTestPeriod" value="60" />
		<!-- 每60秒检查连接池中的空闲连接-->
		<property name="maxStatements" value="20" />
		<!-- jdbc的标准参数  用以控制数据源内加载的PreparedStatement数量，但由于预缓存的Statement属 于单个Connection而不是整个连接-->
	</bean>
	<!--关联hibernate -->
	<bean id="sessionFactory"  class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">  
	    <property name="dataSource" ref="dataSource" />  
        <property name="hibernateProperties">  
	            <props>  
	                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>  
	                <prop key="hibernate.hbm2ddl.auto">update</prop>  
	                <prop key="hibernate.show_sql">true</prop>  
	                <prop key="hiberante.format_sql">true</prop>  
	            </props>  
	        </property>  
	        <property name="packagesToScan" value="com.liy.po" /> 
	        <!--  <property name="configLocations">
	        <property name="mappingResources">
	            <list>  
                <value>User.hbm.xml</value>
	              <mapping class="com.liy.po.User"/> 
	            </list>  
	        </property>  -->
	    </bean>  
	
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 声明式事务管理  -->
	<aop:config>
		<aop:advisor pointcut="execution(* com.liy.service.impl.*ServiceImpl.*(..))" advice-ref="myAdvice" />
	</aop:config>
	<tx:advice id="myAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" rollback-for="com.liy.exception.DaoException" />
		</tx:attributes>
	</tx:advice>
	<!-- 自动扫描组件，需要把controller去掉，否则影响事务管理  -->
	<context:component-scan base-package="com.liy">
		<context:exclude-filter type="regex" expression="com.liy.web.*" />
	</context:component-scan>
</beans>

